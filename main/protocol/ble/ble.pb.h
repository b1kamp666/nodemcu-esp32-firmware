/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_BLE_PROTOCOL_BLE_BLE_PB_H_INCLUDED
#define PB_BLE_PROTOCOL_BLE_BLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ble_BleCommand { /* *
 Low-level commands */
    /* Set BD address. */
    ble_BleCommand_SetBdAddress = 0, 
    /* Sniff advertisements. */
    ble_BleCommand_SniffAdv = 1, 
    /* Jam advertisements. */
    ble_BleCommand_JamAdv = 2, 
    /* Sniff CONN_REQ PDUs and sync with connection. */
    ble_BleCommand_SniffConnReq = 3, 
    /* Sniff active connection. */
    ble_BleCommand_SniffAccessAddress = 4, 
    ble_BleCommand_SniffActiveConn = 5, 
    /* Connection jamming. */
    ble_BleCommand_JamConn = 6, 
    /* Scanner mode. */
    ble_BleCommand_ScanMode = 7, 
    /* Advertiser mode. */
    ble_BleCommand_AdvMode = 8, 
    ble_BleCommand_SetAdvData = 9, 
    /* Central mode. */
    ble_BleCommand_CentralMode = 10, 
    /* SetAdvData shared with Advertiser mode. */
    ble_BleCommand_ConnectTo = 11, 
    ble_BleCommand_SendPDU = 12, 
    ble_BleCommand_Disconnect = 13, 
    /* Peripheral mode. */
    ble_BleCommand_PeripheralMode = 14, 
    /* SetAdvData and SetScanRspData are shared accross
 Peripheral and Advertiser modes */
    ble_BleCommand_Start = 15, 
    ble_BleCommand_Stop = 16, /* SendPDU is shared with Central mode
 Disconnect is shared with Central mode */
    /* Hijack mode */
    ble_BleCommand_Hijack = 17 
} ble_BleCommand;

typedef enum _ble_BleAdvType { 
    ble_BleAdvType_ADV_UNKNOWN = 0, 
    ble_BleAdvType_ADV_IND = 1, 
    ble_BleAdvType_ADV_DIRECT_IND = 2, 
    ble_BleAdvType_ADV_NONCONN_IND = 3, 
    ble_BleAdvType_ADV_SCAN_IND = 4, 
    ble_BleAdvType_ADV_SCAN_RSP = 5 
} ble_BleAdvType;

typedef enum _ble_BleDirection { 
    ble_BleDirection_MASTER_TO_SLAVE = 0, 
    ble_BleDirection_SLAVE_TO_MASTER = 1 
} ble_BleDirection;

/* Struct definitions */
typedef struct _ble_AdvModeCmd { 
    pb_callback_t scan_data;
    pb_callback_t scanrsp_data;
} ble_AdvModeCmd;

/* *
 CentralModeCmd

 Enable central mode. */
typedef struct _ble_CentralModeCmd { 
    char dummy_field;
} ble_CentralModeCmd;

/* *
 ConnectToCmd
 
 Connect to a specific target device. */
typedef struct _ble_ConnectToCmd { 
    pb_callback_t bd_address;
} ble_ConnectToCmd;

typedef struct _ble_JamAdvCmd { 
    char dummy_field;
} ble_JamAdvCmd;

/* *
 PeripheralModeCmd

 Enable peripheral mode. */
typedef struct _ble_PeripheralModeCmd { 
    pb_callback_t scan_data;
    pb_callback_t scanrsp_data;
} ble_PeripheralModeCmd;

typedef struct _ble_SetAdvDataCmd { 
    pb_callback_t scan_data;
    pb_callback_t scanrsp_data;
} ble_SetAdvDataCmd;

typedef struct _ble_SetBdAddressCmd { 
    pb_callback_t bd_address;
} ble_SetBdAddressCmd;

/* *
 SniffAccessAddressCmd

 Sniff Access Addresses sent over BLE.

 Will send AccessAddressDiscovered notifications each
 time an AccessAddress has been found. */
typedef struct _ble_SniffAccessAddressCmd { 
    char dummy_field;
} ble_SniffAccessAddressCmd;

typedef struct _ble_SniffConnReqCmd { 
    pb_callback_t bd_address;
} ble_SniffConnReqCmd;

/* *
 StartCmd

 Enable peripheral advertising and accept connections. */
typedef struct _ble_StartCmd { 
    char dummy_field;
} ble_StartCmd;

/* *
 StopCmd

 Terminate active connection and stop peripheral. */
typedef struct _ble_StopCmd { 
    char dummy_field;
} ble_StopCmd;

typedef struct _ble_AccessAddressDiscovered { 
    uint32_t access_address;
} ble_AccessAddressDiscovered;

typedef PB_BYTES_ARRAY_T(31) ble_AdvPduReceived_adv_data_t;
typedef PB_BYTES_ARRAY_T(31) ble_AdvPduReceived_scanrsp_data_t;
typedef struct _ble_AdvPduReceived { 
    ble_BleAdvType adv_type;
    int32_t rssi;
    pb_byte_t bd_address[6];
    ble_AdvPduReceived_adv_data_t adv_data;
    ble_AdvPduReceived_scanrsp_data_t scanrsp_data;
} ble_AdvPduReceived;

typedef struct _ble_Connected { 
    pb_callback_t initiator;
    uint32_t access_address;
    pb_callback_t advertiser;
} ble_Connected;

typedef struct _ble_DisconnectCmd { 
    int32_t conn_handle;
} ble_DisconnectCmd;

/* *
 Disconnected */
typedef struct _ble_Disconnected { 
    uint32_t reason;
} ble_Disconnected;

typedef struct _ble_HijackCmd { 
    uint32_t access_address;
    bool target_master;
} ble_HijackCmd;

typedef struct _ble_Hijacked { 
    uint32_t access_address;
} ble_Hijacked;

typedef struct _ble_JamAdvOnChannelCmd { 
    uint32_t channel;
} ble_JamAdvOnChannelCmd;

typedef struct _ble_JamConnCmd { 
    uint32_t access_address;
} ble_JamConnCmd;

typedef struct _ble_PduReceived { 
    ble_BleDirection direction;
    pb_callback_t pdu;
} ble_PduReceived;

typedef struct _ble_RawPduReceived { 
    ble_BleDirection direction;
    uint32_t access_address;
    uint32_t channel;
    pb_callback_t pdu;
    uint32_t crc;
} ble_RawPduReceived;

typedef struct _ble_ScanModeCmd { 
    bool active_scan;
} ble_ScanModeCmd;

/* *
 SendPDUCmd

 Sends a raw PDU (to peripheral if in central mode, to central
 if in peripheral mode).

 If device is able to send raw packets, `access_address` and
 `crc` can be provided. */
typedef struct _ble_SendPDUCmd { 
    uint32_t access_address;
    pb_callback_t pdu;
    uint32_t crc;
} ble_SendPDUCmd;

typedef struct _ble_SniffActiveConnCmd { 
    uint32_t access_address;
} ble_SniffActiveConnCmd;

typedef struct _ble_SniffAdvCmd { 
    /* Extended advertisements (BLE 5). */
    bool use_extended_adv;
    /* Channel can be specified, the device will only
listen on this specific channel. */
    uint32_t channel;
} ble_SniffAdvCmd;

typedef struct _ble_Synchronized { 
    uint32_t access_address;
    uint32_t crc_init;
    uint32_t hop_interval;
    uint32_t hop_increment;
    pb_callback_t channel_map;
} ble_Synchronized;

typedef struct _ble_Message { 
    pb_size_t which_msg;
    union {
        /* Messages */
        ble_SetBdAddressCmd set_bd_addr;
        ble_SniffAdvCmd sniff_adv;
        ble_JamAdvCmd jam_adv;
        ble_JamAdvOnChannelCmd jam_adv_chan;
        ble_SniffConnReqCmd sniff_connreq;
        ble_SniffAccessAddressCmd sniff_aa;
        ble_SniffActiveConnCmd sniff_conn;
        ble_JamConnCmd jam_conn;
        ble_ScanModeCmd scan_mode;
        ble_AdvModeCmd adv_mode;
        ble_SetAdvDataCmd set_adv_data;
        ble_CentralModeCmd central_mode;
        ble_ConnectToCmd connect;
        ble_SendPDUCmd send_pdu;
        ble_DisconnectCmd disconnect;
        ble_PeripheralModeCmd periph_mode;
        ble_StartCmd start;
        ble_StopCmd stop;
        ble_HijackCmd hijack;
        /* Notifications */
        ble_AccessAddressDiscovered aa_disc;
        ble_AdvPduReceived adv_pdu;
        ble_Connected connected;
        ble_Disconnected disconnected;
        ble_Synchronized synchronized;
        ble_Hijacked hijacked;
        ble_PduReceived pdu;
        ble_RawPduReceived raw_pdu;
    } msg;
} ble_Message;


/* Helper constants for enums */
#define _ble_BleCommand_MIN ble_BleCommand_SetBdAddress
#define _ble_BleCommand_MAX ble_BleCommand_Hijack
#define _ble_BleCommand_ARRAYSIZE ((ble_BleCommand)(ble_BleCommand_Hijack+1))

#define _ble_BleAdvType_MIN ble_BleAdvType_ADV_UNKNOWN
#define _ble_BleAdvType_MAX ble_BleAdvType_ADV_SCAN_RSP
#define _ble_BleAdvType_ARRAYSIZE ((ble_BleAdvType)(ble_BleAdvType_ADV_SCAN_RSP+1))

#define _ble_BleDirection_MIN ble_BleDirection_MASTER_TO_SLAVE
#define _ble_BleDirection_MAX ble_BleDirection_SLAVE_TO_MASTER
#define _ble_BleDirection_ARRAYSIZE ((ble_BleDirection)(ble_BleDirection_SLAVE_TO_MASTER+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ble_SetBdAddressCmd_init_default         {{{NULL}, NULL}}
#define ble_SniffAdvCmd_init_default             {0, 0}
#define ble_JamAdvCmd_init_default               {0}
#define ble_JamAdvOnChannelCmd_init_default      {0}
#define ble_SniffConnReqCmd_init_default         {{{NULL}, NULL}}
#define ble_SniffAccessAddressCmd_init_default   {0}
#define ble_SniffActiveConnCmd_init_default      {0}
#define ble_JamConnCmd_init_default              {0}
#define ble_ScanModeCmd_init_default             {0}
#define ble_AdvModeCmd_init_default              {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_SetAdvDataCmd_init_default           {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_CentralModeCmd_init_default          {0}
#define ble_ConnectToCmd_init_default            {{{NULL}, NULL}}
#define ble_SendPDUCmd_init_default              {0, {{NULL}, NULL}, 0}
#define ble_DisconnectCmd_init_default           {0}
#define ble_PeripheralModeCmd_init_default       {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_StartCmd_init_default                {0}
#define ble_StopCmd_init_default                 {0}
#define ble_HijackCmd_init_default               {0, 0}
#define ble_AccessAddressDiscovered_init_default {0}
#define ble_AdvPduReceived_init_default          {_ble_BleAdvType_MIN, 0, {0}, {0, {0}}, {0, {0}}}
#define ble_Connected_init_default               {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define ble_Disconnected_init_default            {0}
#define ble_Synchronized_init_default            {0, 0, 0, 0, {{NULL}, NULL}}
#define ble_Hijacked_init_default                {0}
#define ble_RawPduReceived_init_default          {_ble_BleDirection_MIN, 0, 0, {{NULL}, NULL}, 0}
#define ble_PduReceived_init_default             {_ble_BleDirection_MIN, {{NULL}, NULL}}
#define ble_Message_init_default                 {0, {ble_SetBdAddressCmd_init_default}}
#define ble_SetBdAddressCmd_init_zero            {{{NULL}, NULL}}
#define ble_SniffAdvCmd_init_zero                {0, 0}
#define ble_JamAdvCmd_init_zero                  {0}
#define ble_JamAdvOnChannelCmd_init_zero         {0}
#define ble_SniffConnReqCmd_init_zero            {{{NULL}, NULL}}
#define ble_SniffAccessAddressCmd_init_zero      {0}
#define ble_SniffActiveConnCmd_init_zero         {0}
#define ble_JamConnCmd_init_zero                 {0}
#define ble_ScanModeCmd_init_zero                {0}
#define ble_AdvModeCmd_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_SetAdvDataCmd_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_CentralModeCmd_init_zero             {0}
#define ble_ConnectToCmd_init_zero               {{{NULL}, NULL}}
#define ble_SendPDUCmd_init_zero                 {0, {{NULL}, NULL}, 0}
#define ble_DisconnectCmd_init_zero              {0}
#define ble_PeripheralModeCmd_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}}
#define ble_StartCmd_init_zero                   {0}
#define ble_StopCmd_init_zero                    {0}
#define ble_HijackCmd_init_zero                  {0, 0}
#define ble_AccessAddressDiscovered_init_zero    {0}
#define ble_AdvPduReceived_init_zero             {_ble_BleAdvType_MIN, 0, {0}, {0, {0}}, {0, {0}}}
#define ble_Connected_init_zero                  {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define ble_Disconnected_init_zero               {0}
#define ble_Synchronized_init_zero               {0, 0, 0, 0, {{NULL}, NULL}}
#define ble_Hijacked_init_zero                   {0}
#define ble_RawPduReceived_init_zero             {_ble_BleDirection_MIN, 0, 0, {{NULL}, NULL}, 0}
#define ble_PduReceived_init_zero                {_ble_BleDirection_MIN, {{NULL}, NULL}}
#define ble_Message_init_zero                    {0, {ble_SetBdAddressCmd_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define ble_AdvModeCmd_scan_data_tag             1
#define ble_AdvModeCmd_scanrsp_data_tag          2
#define ble_ConnectToCmd_bd_address_tag          1
#define ble_PeripheralModeCmd_scan_data_tag      1
#define ble_PeripheralModeCmd_scanrsp_data_tag   2
#define ble_SetAdvDataCmd_scan_data_tag          1
#define ble_SetAdvDataCmd_scanrsp_data_tag       2
#define ble_SetBdAddressCmd_bd_address_tag       1
#define ble_SniffConnReqCmd_bd_address_tag       1
#define ble_AccessAddressDiscovered_access_address_tag 1
#define ble_AdvPduReceived_adv_type_tag          1
#define ble_AdvPduReceived_rssi_tag              2
#define ble_AdvPduReceived_bd_address_tag        3
#define ble_AdvPduReceived_adv_data_tag          4
#define ble_AdvPduReceived_scanrsp_data_tag      5
#define ble_Connected_initiator_tag              1
#define ble_Connected_access_address_tag         2
#define ble_Connected_advertiser_tag             3
#define ble_DisconnectCmd_conn_handle_tag        1
#define ble_Disconnected_reason_tag              1
#define ble_HijackCmd_access_address_tag         1
#define ble_HijackCmd_target_master_tag          2
#define ble_Hijacked_access_address_tag          1
#define ble_JamAdvOnChannelCmd_channel_tag       1
#define ble_JamConnCmd_access_address_tag        1
#define ble_PduReceived_direction_tag            1
#define ble_PduReceived_pdu_tag                  2
#define ble_RawPduReceived_direction_tag         1
#define ble_RawPduReceived_access_address_tag    2
#define ble_RawPduReceived_channel_tag           3
#define ble_RawPduReceived_pdu_tag               4
#define ble_RawPduReceived_crc_tag               5
#define ble_ScanModeCmd_active_scan_tag          1
#define ble_SendPDUCmd_access_address_tag        1
#define ble_SendPDUCmd_pdu_tag                   2
#define ble_SendPDUCmd_crc_tag                   3
#define ble_SniffActiveConnCmd_access_address_tag 1
#define ble_SniffAdvCmd_use_extended_adv_tag     1
#define ble_SniffAdvCmd_channel_tag              2
#define ble_Synchronized_access_address_tag      1
#define ble_Synchronized_crc_init_tag            2
#define ble_Synchronized_hop_interval_tag        3
#define ble_Synchronized_hop_increment_tag       4
#define ble_Synchronized_channel_map_tag         5
#define ble_Message_set_bd_addr_tag              1
#define ble_Message_sniff_adv_tag                2
#define ble_Message_jam_adv_tag                  3
#define ble_Message_jam_adv_chan_tag             4
#define ble_Message_sniff_connreq_tag            5
#define ble_Message_sniff_aa_tag                 6
#define ble_Message_sniff_conn_tag               7
#define ble_Message_jam_conn_tag                 8
#define ble_Message_scan_mode_tag                9
#define ble_Message_adv_mode_tag                 10
#define ble_Message_set_adv_data_tag             11
#define ble_Message_central_mode_tag             12
#define ble_Message_connect_tag                  13
#define ble_Message_send_pdu_tag                 14
#define ble_Message_disconnect_tag               15
#define ble_Message_periph_mode_tag              16
#define ble_Message_start_tag                    17
#define ble_Message_stop_tag                     18
#define ble_Message_hijack_tag                   19
#define ble_Message_aa_disc_tag                  20
#define ble_Message_adv_pdu_tag                  21
#define ble_Message_connected_tag                22
#define ble_Message_disconnected_tag             23
#define ble_Message_synchronized_tag             24
#define ble_Message_hijacked_tag                 25
#define ble_Message_pdu_tag                      26
#define ble_Message_raw_pdu_tag                  27

/* Struct field encoding specification for nanopb */
#define ble_SetBdAddressCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    bd_address,        1)
#define ble_SetBdAddressCmd_CALLBACK pb_default_field_callback
#define ble_SetBdAddressCmd_DEFAULT NULL

#define ble_SniffAdvCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     use_extended_adv,   1) \
X(a, STATIC,   SINGULAR, UINT32,   channel,           2)
#define ble_SniffAdvCmd_CALLBACK NULL
#define ble_SniffAdvCmd_DEFAULT NULL

#define ble_JamAdvCmd_FIELDLIST(X, a) \

#define ble_JamAdvCmd_CALLBACK NULL
#define ble_JamAdvCmd_DEFAULT NULL

#define ble_JamAdvOnChannelCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   channel,           1)
#define ble_JamAdvOnChannelCmd_CALLBACK NULL
#define ble_JamAdvOnChannelCmd_DEFAULT NULL

#define ble_SniffConnReqCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    bd_address,        1)
#define ble_SniffConnReqCmd_CALLBACK pb_default_field_callback
#define ble_SniffConnReqCmd_DEFAULT NULL

#define ble_SniffAccessAddressCmd_FIELDLIST(X, a) \

#define ble_SniffAccessAddressCmd_CALLBACK NULL
#define ble_SniffAccessAddressCmd_DEFAULT NULL

#define ble_SniffActiveConnCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1)
#define ble_SniffActiveConnCmd_CALLBACK NULL
#define ble_SniffActiveConnCmd_DEFAULT NULL

#define ble_JamConnCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1)
#define ble_JamConnCmd_CALLBACK NULL
#define ble_JamConnCmd_DEFAULT NULL

#define ble_ScanModeCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     active_scan,       1)
#define ble_ScanModeCmd_CALLBACK NULL
#define ble_ScanModeCmd_DEFAULT NULL

#define ble_AdvModeCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    scan_data,         1) \
X(a, CALLBACK, SINGULAR, BYTES,    scanrsp_data,      2)
#define ble_AdvModeCmd_CALLBACK pb_default_field_callback
#define ble_AdvModeCmd_DEFAULT NULL

#define ble_SetAdvDataCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    scan_data,         1) \
X(a, CALLBACK, SINGULAR, BYTES,    scanrsp_data,      2)
#define ble_SetAdvDataCmd_CALLBACK pb_default_field_callback
#define ble_SetAdvDataCmd_DEFAULT NULL

#define ble_CentralModeCmd_FIELDLIST(X, a) \

#define ble_CentralModeCmd_CALLBACK NULL
#define ble_CentralModeCmd_DEFAULT NULL

#define ble_ConnectToCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    bd_address,        1)
#define ble_ConnectToCmd_CALLBACK pb_default_field_callback
#define ble_ConnectToCmd_DEFAULT NULL

#define ble_SendPDUCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1) \
X(a, CALLBACK, SINGULAR, BYTES,    pdu,               2) \
X(a, STATIC,   SINGULAR, UINT32,   crc,               3)
#define ble_SendPDUCmd_CALLBACK pb_default_field_callback
#define ble_SendPDUCmd_DEFAULT NULL

#define ble_DisconnectCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    conn_handle,       1)
#define ble_DisconnectCmd_CALLBACK NULL
#define ble_DisconnectCmd_DEFAULT NULL

#define ble_PeripheralModeCmd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    scan_data,         1) \
X(a, CALLBACK, SINGULAR, BYTES,    scanrsp_data,      2)
#define ble_PeripheralModeCmd_CALLBACK pb_default_field_callback
#define ble_PeripheralModeCmd_DEFAULT NULL

#define ble_StartCmd_FIELDLIST(X, a) \

#define ble_StartCmd_CALLBACK NULL
#define ble_StartCmd_DEFAULT NULL

#define ble_StopCmd_FIELDLIST(X, a) \

#define ble_StopCmd_CALLBACK NULL
#define ble_StopCmd_DEFAULT NULL

#define ble_HijackCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1) \
X(a, STATIC,   SINGULAR, BOOL,     target_master,     2)
#define ble_HijackCmd_CALLBACK NULL
#define ble_HijackCmd_DEFAULT NULL

#define ble_AccessAddressDiscovered_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1)
#define ble_AccessAddressDiscovered_CALLBACK NULL
#define ble_AccessAddressDiscovered_DEFAULT NULL

#define ble_AdvPduReceived_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    adv_type,          1) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              2) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, bd_address,        3) \
X(a, STATIC,   SINGULAR, BYTES,    adv_data,          4) \
X(a, STATIC,   SINGULAR, BYTES,    scanrsp_data,      5)
#define ble_AdvPduReceived_CALLBACK NULL
#define ble_AdvPduReceived_DEFAULT NULL

#define ble_Connected_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    initiator,         1) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    2) \
X(a, CALLBACK, SINGULAR, BYTES,    advertiser,        3)
#define ble_Connected_CALLBACK pb_default_field_callback
#define ble_Connected_DEFAULT NULL

#define ble_Disconnected_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   reason,            1)
#define ble_Disconnected_CALLBACK NULL
#define ble_Disconnected_DEFAULT NULL

#define ble_Synchronized_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1) \
X(a, STATIC,   SINGULAR, UINT32,   crc_init,          2) \
X(a, STATIC,   SINGULAR, UINT32,   hop_interval,      3) \
X(a, STATIC,   SINGULAR, UINT32,   hop_increment,     4) \
X(a, CALLBACK, SINGULAR, BYTES,    channel_map,       5)
#define ble_Synchronized_CALLBACK pb_default_field_callback
#define ble_Synchronized_DEFAULT NULL

#define ble_Hijacked_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    1)
#define ble_Hijacked_CALLBACK NULL
#define ble_Hijacked_DEFAULT NULL

#define ble_RawPduReceived_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    direction,         1) \
X(a, STATIC,   SINGULAR, UINT32,   access_address,    2) \
X(a, STATIC,   SINGULAR, UINT32,   channel,           3) \
X(a, CALLBACK, SINGULAR, BYTES,    pdu,               4) \
X(a, STATIC,   SINGULAR, UINT32,   crc,               5)
#define ble_RawPduReceived_CALLBACK pb_default_field_callback
#define ble_RawPduReceived_DEFAULT NULL

#define ble_PduReceived_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    direction,         1) \
X(a, CALLBACK, SINGULAR, BYTES,    pdu,               2)
#define ble_PduReceived_CALLBACK pb_default_field_callback
#define ble_PduReceived_DEFAULT NULL

#define ble_Message_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,set_bd_addr,msg.set_bd_addr),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sniff_adv,msg.sniff_adv),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,jam_adv,msg.jam_adv),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,jam_adv_chan,msg.jam_adv_chan),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sniff_connreq,msg.sniff_connreq),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sniff_aa,msg.sniff_aa),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,sniff_conn,msg.sniff_conn),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,jam_conn,msg.jam_conn),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,scan_mode,msg.scan_mode),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,adv_mode,msg.adv_mode),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,set_adv_data,msg.set_adv_data),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,central_mode,msg.central_mode),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,connect,msg.connect),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,send_pdu,msg.send_pdu),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,disconnect,msg.disconnect),  15) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,periph_mode,msg.periph_mode),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,start,msg.start),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,stop,msg.stop),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,hijack,msg.hijack),  19) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,aa_disc,msg.aa_disc),  20) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,adv_pdu,msg.adv_pdu),  21) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,connected,msg.connected),  22) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,disconnected,msg.disconnected),  23) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,synchronized,msg.synchronized),  24) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,hijacked,msg.hijacked),  25) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,pdu,msg.pdu),  26) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,raw_pdu,msg.raw_pdu),  27)
#define ble_Message_CALLBACK NULL
#define ble_Message_DEFAULT NULL
#define ble_Message_msg_set_bd_addr_MSGTYPE ble_SetBdAddressCmd
#define ble_Message_msg_sniff_adv_MSGTYPE ble_SniffAdvCmd
#define ble_Message_msg_jam_adv_MSGTYPE ble_JamAdvCmd
#define ble_Message_msg_jam_adv_chan_MSGTYPE ble_JamAdvOnChannelCmd
#define ble_Message_msg_sniff_connreq_MSGTYPE ble_SniffConnReqCmd
#define ble_Message_msg_sniff_aa_MSGTYPE ble_SniffAccessAddressCmd
#define ble_Message_msg_sniff_conn_MSGTYPE ble_SniffActiveConnCmd
#define ble_Message_msg_jam_conn_MSGTYPE ble_JamConnCmd
#define ble_Message_msg_scan_mode_MSGTYPE ble_ScanModeCmd
#define ble_Message_msg_adv_mode_MSGTYPE ble_AdvModeCmd
#define ble_Message_msg_set_adv_data_MSGTYPE ble_SetAdvDataCmd
#define ble_Message_msg_central_mode_MSGTYPE ble_CentralModeCmd
#define ble_Message_msg_connect_MSGTYPE ble_ConnectToCmd
#define ble_Message_msg_send_pdu_MSGTYPE ble_SendPDUCmd
#define ble_Message_msg_disconnect_MSGTYPE ble_DisconnectCmd
#define ble_Message_msg_periph_mode_MSGTYPE ble_PeripheralModeCmd
#define ble_Message_msg_start_MSGTYPE ble_StartCmd
#define ble_Message_msg_stop_MSGTYPE ble_StopCmd
#define ble_Message_msg_hijack_MSGTYPE ble_HijackCmd
#define ble_Message_msg_aa_disc_MSGTYPE ble_AccessAddressDiscovered
#define ble_Message_msg_adv_pdu_MSGTYPE ble_AdvPduReceived
#define ble_Message_msg_connected_MSGTYPE ble_Connected
#define ble_Message_msg_disconnected_MSGTYPE ble_Disconnected
#define ble_Message_msg_synchronized_MSGTYPE ble_Synchronized
#define ble_Message_msg_hijacked_MSGTYPE ble_Hijacked
#define ble_Message_msg_pdu_MSGTYPE ble_PduReceived
#define ble_Message_msg_raw_pdu_MSGTYPE ble_RawPduReceived

extern const pb_msgdesc_t ble_SetBdAddressCmd_msg;
extern const pb_msgdesc_t ble_SniffAdvCmd_msg;
extern const pb_msgdesc_t ble_JamAdvCmd_msg;
extern const pb_msgdesc_t ble_JamAdvOnChannelCmd_msg;
extern const pb_msgdesc_t ble_SniffConnReqCmd_msg;
extern const pb_msgdesc_t ble_SniffAccessAddressCmd_msg;
extern const pb_msgdesc_t ble_SniffActiveConnCmd_msg;
extern const pb_msgdesc_t ble_JamConnCmd_msg;
extern const pb_msgdesc_t ble_ScanModeCmd_msg;
extern const pb_msgdesc_t ble_AdvModeCmd_msg;
extern const pb_msgdesc_t ble_SetAdvDataCmd_msg;
extern const pb_msgdesc_t ble_CentralModeCmd_msg;
extern const pb_msgdesc_t ble_ConnectToCmd_msg;
extern const pb_msgdesc_t ble_SendPDUCmd_msg;
extern const pb_msgdesc_t ble_DisconnectCmd_msg;
extern const pb_msgdesc_t ble_PeripheralModeCmd_msg;
extern const pb_msgdesc_t ble_StartCmd_msg;
extern const pb_msgdesc_t ble_StopCmd_msg;
extern const pb_msgdesc_t ble_HijackCmd_msg;
extern const pb_msgdesc_t ble_AccessAddressDiscovered_msg;
extern const pb_msgdesc_t ble_AdvPduReceived_msg;
extern const pb_msgdesc_t ble_Connected_msg;
extern const pb_msgdesc_t ble_Disconnected_msg;
extern const pb_msgdesc_t ble_Synchronized_msg;
extern const pb_msgdesc_t ble_Hijacked_msg;
extern const pb_msgdesc_t ble_RawPduReceived_msg;
extern const pb_msgdesc_t ble_PduReceived_msg;
extern const pb_msgdesc_t ble_Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ble_SetBdAddressCmd_fields &ble_SetBdAddressCmd_msg
#define ble_SniffAdvCmd_fields &ble_SniffAdvCmd_msg
#define ble_JamAdvCmd_fields &ble_JamAdvCmd_msg
#define ble_JamAdvOnChannelCmd_fields &ble_JamAdvOnChannelCmd_msg
#define ble_SniffConnReqCmd_fields &ble_SniffConnReqCmd_msg
#define ble_SniffAccessAddressCmd_fields &ble_SniffAccessAddressCmd_msg
#define ble_SniffActiveConnCmd_fields &ble_SniffActiveConnCmd_msg
#define ble_JamConnCmd_fields &ble_JamConnCmd_msg
#define ble_ScanModeCmd_fields &ble_ScanModeCmd_msg
#define ble_AdvModeCmd_fields &ble_AdvModeCmd_msg
#define ble_SetAdvDataCmd_fields &ble_SetAdvDataCmd_msg
#define ble_CentralModeCmd_fields &ble_CentralModeCmd_msg
#define ble_ConnectToCmd_fields &ble_ConnectToCmd_msg
#define ble_SendPDUCmd_fields &ble_SendPDUCmd_msg
#define ble_DisconnectCmd_fields &ble_DisconnectCmd_msg
#define ble_PeripheralModeCmd_fields &ble_PeripheralModeCmd_msg
#define ble_StartCmd_fields &ble_StartCmd_msg
#define ble_StopCmd_fields &ble_StopCmd_msg
#define ble_HijackCmd_fields &ble_HijackCmd_msg
#define ble_AccessAddressDiscovered_fields &ble_AccessAddressDiscovered_msg
#define ble_AdvPduReceived_fields &ble_AdvPduReceived_msg
#define ble_Connected_fields &ble_Connected_msg
#define ble_Disconnected_fields &ble_Disconnected_msg
#define ble_Synchronized_fields &ble_Synchronized_msg
#define ble_Hijacked_fields &ble_Hijacked_msg
#define ble_RawPduReceived_fields &ble_RawPduReceived_msg
#define ble_PduReceived_fields &ble_PduReceived_msg
#define ble_Message_fields &ble_Message_msg

/* Maximum encoded size of messages (where known) */
/* ble_SetBdAddressCmd_size depends on runtime parameters */
/* ble_SniffConnReqCmd_size depends on runtime parameters */
/* ble_AdvModeCmd_size depends on runtime parameters */
/* ble_SetAdvDataCmd_size depends on runtime parameters */
/* ble_ConnectToCmd_size depends on runtime parameters */
/* ble_SendPDUCmd_size depends on runtime parameters */
/* ble_PeripheralModeCmd_size depends on runtime parameters */
/* ble_Connected_size depends on runtime parameters */
/* ble_Synchronized_size depends on runtime parameters */
/* ble_RawPduReceived_size depends on runtime parameters */
/* ble_PduReceived_size depends on runtime parameters */
/* ble_Message_size depends on runtime parameters */
#define ble_AccessAddressDiscovered_size         6
#define ble_AdvPduReceived_size                  87
#define ble_CentralModeCmd_size                  0
#define ble_DisconnectCmd_size                   11
#define ble_Disconnected_size                    6
#define ble_HijackCmd_size                       8
#define ble_Hijacked_size                        6
#define ble_JamAdvCmd_size                       0
#define ble_JamAdvOnChannelCmd_size              6
#define ble_JamConnCmd_size                      6
#define ble_ScanModeCmd_size                     2
#define ble_SniffAccessAddressCmd_size           0
#define ble_SniffActiveConnCmd_size              6
#define ble_SniffAdvCmd_size                     8
#define ble_StartCmd_size                        0
#define ble_StopCmd_size                         0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
