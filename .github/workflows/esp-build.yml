name: Build ESP32 Firmware (from b1kamp666 repo)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Install Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 2️⃣ Cache ESP-IDF toolchain + Python deps
      - name: Cache ESP-IDF
        uses: actions/cache@v4
        with:
          path: |
            ~/.espressif
            esp-idf
          key: ${{ runner.os }}-espidf-v5.5.1
          restore-keys: |
            ${{ runner.os }}-espidf-

      # 3️⃣ Clone ESP-IDF and install minimal ESP32 toolchain
      - name: Install ESP-IDF (ESP32 only)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install cmake ninja
          if [ ! -d esp-idf ]; then
            git clone --recursive https://github.com/espressif/esp-idf.git -b v5.5.1 esp-idf
          fi
          cd esp-idf
          ./tools/idf_tools.py install --target esp32
          ./tools/idf_tools.py install-python-env
          cd ..
          echo "IDF_PATH=$PWD/esp-idf" >> $GITHUB_ENV
          echo "$PWD/esp-idf/tools" >> $GITHUB_PATH

      # 4️⃣ Clone NodeMCU firmware repository
      - name: Clone NodeMCU firmware repo
        shell: bash
        run: |
          git clone --recursive https://github.com/b1kamp666/nodemcu-esp32-firmware.git
          cd nodemcu-esp32-firmware
          if [ ! -d main/nanopb ]; then
            git clone https://github.com/nanopb/nanopb.git main/nanopb

      # 5️⃣ Build firmware
      - name: Build ESP32 firmware
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/esp-idf/export.sh
          cd nodemcu-esp32-firmware
          idf.py build

      # 6️⃣ Upload firmware artifacts
      - name: Upload built firmware
        uses: actions/upload-artifact@v4
        with:
          name: nodemcu-esp32-firmware
          path: |
            nodemcu-esp32-firmware/build/*.bin
            nodemcu-esp32-firmware/build/*.elf
