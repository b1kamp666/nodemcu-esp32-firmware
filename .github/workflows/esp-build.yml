name: Build NodeMCU ESP32 Firmware (Fast CI)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository and submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # 2️⃣ Clone nanopb if missing
      - name: Ensure nanopb exists
        run: |
          if [ ! -d main/nanopb ]; then
            git clone https://github.com/nanopb/nanopb.git main/nanopb
          fi

      # 3️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 4️⃣ Cache Python packages
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 5️⃣ Cache ESP-IDF toolchain
      - name: Cache ESP-IDF
        uses: actions/cache@v4
        with:
          path: |
            ~/.espressif
            esp-idf
          key: ${{ runner.os }}-espidf-v5.5.1
          restore-keys: |
            ${{ runner.os }}-espidf-

      # 6️⃣ Install minimal ESP-IDF toolchain
      - name: Install minimal ESP-IDF (ESP32 only)
        run: |
          python -m pip install --upgrade pip
          pip install cmake ninja
          if [ ! -d esp-idf ]; then
            git clone --recursive https://github.com/espressif/esp-idf.git -b v5.5.1 esp-idf
          fi
          cd esp-idf
          python -m pip install -r requirements.txt
          ./tools/idf_tools.py install --target esp32
          ./tools/idf_tools.py install-python-env
          cd ..
          echo "source $PWD/esp-idf/export.sh" >> $GITHUB_ENV

      # 7️⃣ Build firmware
      - name: Build NodeMCU firmware
        run: |
          source $PWD/esp-idf/export.sh
          idf.py fullclean
          idf.py build

      # 8️⃣ Upload build artifacts
      - name: Upload firmware binaries
        uses: actions/upload-artifact@v4
        with:
          name: nodemcu-esp32-firmware
          path: build/*.bin
